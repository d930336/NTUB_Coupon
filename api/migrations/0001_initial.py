# Generated by Django 2.2.1 on 2019-12-02 01:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_auto_20190613_0050'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('gender', models.CharField(max_length=1, verbose_name='性別')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('created',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='優惠卷編號')),
                ('coupon_price', models.IntegerField(verbose_name='優惠卷特價價格')),
                ('coupon_original_price', models.IntegerField(blank=True, null=True, verbose_name='優惠卷原始價格')),
                ('coupon_title', models.CharField(max_length=150, verbose_name='優惠卷標題')),
                ('coupon_class', models.CharField(max_length=20, verbose_name='優惠卷類別')),
                ('coupon_note', models.CharField(max_length=200, verbose_name='優惠卷內容')),
                ('coupon_notice', models.CharField(max_length=200, verbose_name='優惠卷注意事項')),
                ('coupon_saving', models.IntegerField(verbose_name='優惠卷折扣')),
                ('coupon_img', models.ImageField(blank=True, null=True, upload_to='coupons', verbose_name='優惠卷圖片')),
                ('coupon_create_at', models.DateTimeField(auto_now_add=True, verbose_name='優惠卷創建時間')),
            ],
            options={
                'verbose_name': '優惠卷',
                'verbose_name_plural': '優惠卷',
                'ordering': ('coupon_create_at',),
            },
        ),
        migrations.CreateModel(
            name='UserAccounting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accounting_class', models.CharField(max_length=30, verbose_name='記帳類別')),
                ('accounting_data', models.IntegerField(default=0, verbose_name='記帳資料')),
                ('accounting_date', models.CharField(default='1202', max_length=30, verbose_name='記帳日期')),
                ('accounting_discount', models.CharField(blank=True, max_length=30, null=True, verbose_name='記帳折扣')),
                ('accounting_coupon_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='優惠卷名稱')),
                ('accounting_month', models.CharField(max_length=2, verbose_name='記帳月份')),
                ('user_accounting_post_at', models.DateTimeField(auto_now_add=True, verbose_name='記帳創建時間')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='使用者')),
            ],
            options={
                'verbose_name': '使用者記帳',
                'verbose_name_plural': '使用者記帳',
            },
        ),
        migrations.CreateModel(
            name='UserFav',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_fav_create_at', models.DateTimeField(auto_now_add=True, verbose_name='添加時間')),
                ('coupons', models.ForeignKey(help_text='優惠卷id', on_delete=django.db.models.deletion.CASCADE, to='api.Coupon', verbose_name='優惠卷')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='使用者')),
            ],
            options={
                'verbose_name': '使用者收藏',
                'verbose_name_plural': '使用者收藏',
                'unique_together': {('user', 'coupons')},
            },
        ),
    ]
